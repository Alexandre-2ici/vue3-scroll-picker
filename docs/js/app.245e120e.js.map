{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/ScrollPicker.vue?9208","webpack:///./src/App.vue?3f7e","webpack:///./src/examples/Advance.vue?d20d","webpack:///./src/App.vue","webpack:///./src/examples/Basic.vue","webpack:///./src/examples/Basic.vue?d8e5","webpack:///./src/examples/Basic.vue?6756","webpack:///./src/examples/Advance.vue","webpack:///./src/examples/Advance.vue?90e3","webpack:///./src/examples/Advance.vue?96a7","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///../src/ScrollPicker.vue","webpack:///../src/ScrollPicker.vue?203f","webpack:///../src/ScrollPicker.vue?d79b","webpack:///../src/main.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","style","options","selections","onClickRandom","mockOptions","label","setup","state","random","number","Math","floor","getValue","option","map","render","class","inactive-style","active-style","prop","item","top-overlay","bottom-overlay","center-overlay","__scopeId","components","Basic","Advance","centerStyle","padStyle","column","id","ref","el","setColumnRef","row","getIsActive","activeClass","inactiveClass","activeStyle","inactiveStyle","active","getLabel","props","modelValue","default","type","Array","String","emits","emit","getContentHeight","columns","elements","document","getElementsByClassName","clientHeight","getCenterStyle","height","getPadStyle","getMarkings","rows","y","content","children","includes","getTouchInfo","event","touchEvent","isTouchable","changedTouches","touches","preventDefault","cancelable","stopPropagation","getContent","index","Number","target","replace","handleStart","overlay","touchInfo","mouseDownStart","clientY","top","scrollTop","isMouseDown","cursor","isScrolling","handleMove","dy","getColumnRowIndex","columnIndex","rowIndex","setSelections","handleEnd","handleCancel","handleWheel","deltaY","wheelTimer","clearTimeout","setTimeout","findNearest","arr","nearest","reduce","prev","curr","abs","markings","findIndex","v","initializeSelections","newSelections","selection","newModelValue","getEvents","handler","listenEvent","forEach","element","events","removeEventListener","addEventListener","unlistenEvent","undefined","filterColumnsContent","scrollToModelValue","scrollTo","behavior","matchMedia","matches","immediate","deep","install","app","component","ScrollPicker","App","use","mount"],"mappings":"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","file":"js/app.245e120e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue3-scroll-picker/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../example/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../example/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../example/node_modules/vue-loader-v16/dist/stylePostLoader.js!../example/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../example/node_modules/cache-loader/dist/cjs.js??ref--0-0!../example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ScrollPicker.vue?vue&type=style&index=0&id=85fb9754&scoped=true&lang=css\"; export * from \"-!../example/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../example/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../example/node_modules/vue-loader-v16/dist/stylePostLoader.js!../example/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../example/node_modules/cache-loader/dist/cjs.js??ref--0-0!../example/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ScrollPicker.vue?vue&type=style&index=0&id=85fb9754&scoped=true&lang=css\"","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=css\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Advance.vue?vue&type=style&index=0&id=c0470844&scoped=true&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Advance.vue?vue&type=style&index=0&id=c0470844&scoped=true&lang=css\"","<template>\n  <basic></basic>\n  <advance></advance>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Basic from './examples/Basic.vue'\nimport Advance from './examples/Advance.vue'\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Basic,\n    Advance\n  },\n});\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <h3>Basic Example</h3 >\n  <scroll-picker \n    :options=\"options\" \n    v-model=\"selections\" />\n  <div style=\"margin-top: 30px;\">\n    {{ selections }}\n  </div>\n  <button style=\"margin-top: 30px;\" @click=\"onClickRandom\">\n    Random\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from 'vue';\n\nconst mockOptions = [\n  [\n    {\n      label: \"A1\",\n      value: \"a1\"\n    },\n    {\n      label: \"A2\",\n      value: \"a2\"\n    },\n  ],\n  [\n    {\n      label: \"B1\",\n      value: \"b1\"\n    },\n    {\n      label: \"B2\",\n      value: \"b2\"\n    },\n    {\n      label: \"B3\",\n      value: \"b3\"\n    },\n  ],\n  [\n    {\n      label: \"C1\",\n      value: \"c1\"\n    },\n    {\n      label: \"C2\",\n      value: \"c2\"\n    },\n    {\n      label: \"C3\",\n      value: \"c3\"\n    },\n    {\n      label: \"C4\",\n      value: \"c4\"\n    }\n  ]\n];\n\nexport default defineComponent({\n  name: 'Basic',\n  setup() {\n    const state = reactive({\n      options: mockOptions,\n      selections: ['a2','b2','c1'],\n    });\n    function random(number: number) {\n      return Math.floor(Math.random() * number);  \n    }\n    function getValue(option) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function onClickRandom() {\n      state.selections = state.options.map(option => {\n        return getValue(option[random(option.length)]);\n      })\n    }\n    return {\n      ...toRefs(state),\n      onClickRandom,\n    };\n  }\n});\n</script>\n","\nimport { defineComponent, reactive, toRefs } from 'vue';\n\nconst mockOptions = [\n  [\n    {\n      label: \"A1\",\n      value: \"a1\"\n    },\n    {\n      label: \"A2\",\n      value: \"a2\"\n    },\n  ],\n  [\n    {\n      label: \"B1\",\n      value: \"b1\"\n    },\n    {\n      label: \"B2\",\n      value: \"b2\"\n    },\n    {\n      label: \"B3\",\n      value: \"b3\"\n    },\n  ],\n  [\n    {\n      label: \"C1\",\n      value: \"c1\"\n    },\n    {\n      label: \"C2\",\n      value: \"c2\"\n    },\n    {\n      label: \"C3\",\n      value: \"c3\"\n    },\n    {\n      label: \"C4\",\n      value: \"c4\"\n    }\n  ]\n];\n\nexport default defineComponent({\n  name: 'Basic',\n  setup() {\n    const state = reactive({\n      options: mockOptions,\n      selections: ['a2','b2','c1'],\n    });\n    function random(number: number) {\n      return Math.floor(Math.random() * number);  \n    }\n    function getValue(option) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function onClickRandom() {\n      state.selections = state.options.map(option => {\n        return getValue(option[random(option.length)]);\n      })\n    }\n    return {\n      ...toRefs(state),\n      onClickRandom,\n    };\n  }\n});\n","import { render } from \"./Basic.vue?vue&type=template&id=63067ef3&bindings={}\"\nimport script from \"./Basic.vue?vue&type=script&lang=ts\"\nexport * from \"./Basic.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h3>Advance Example</h3 >\n  <scroll-picker \n    :options=\"options\" \n    v-model=\"selections\"\n    inactive-style=\"color: lightgrey; font-size: 20px;\"\n    active-style=\"color: red; font-size: 30px;\">\n    <template v-slot:option=\"prop\" >\n      <div style=\"padding: 10px 20px;\">\n        {{ prop.item.label }}\n      </div>\n    </template>\n    <template v-slot:top-overlay>\n      <div class=\"top-overlay\"></div>\n    </template>\n    <template v-slot:bottom-overlay>\n      <div class=\"bottom-overlay\"></div>\n    </template>\n    <template v-slot:center-overlay>\n      <div class=\"center-overlay\"></div>\n    </template>\n  </scroll-picker>\n  <div style=\"margin-top: 30px;\">\n    {{ selections }}\n  </div>\n  <button style=\"margin-top: 30px;\" @click=\"onClickRandom\">\n    Random\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from 'vue';\n\nconst mockOptions = [\n  [\n    {\n      label: \"A1\",\n      value: \"a1\"\n    },\n    {\n      label: \"A2\",\n      value: \"a2\"\n    },\n  ],\n  [\n    {\n      label: \"B1\",\n      value: \"b1\"\n    },\n    {\n      label: \"B2\",\n      value: \"b2\"\n    },\n    {\n      label: \"B3\",\n      value: \"b3\"\n    },\n  ],\n  [\n    {\n      label: \"C1\",\n      value: \"c1\"\n    },\n    {\n      label: \"C2\",\n      value: \"c2\"\n    },\n    {\n      label: \"C3\",\n      value: \"c3\"\n    },\n    {\n      label: \"C4\",\n      value: \"c4\"\n    }\n  ]\n];\n\nexport default defineComponent({\n  name: 'Advance',\n  setup() {\n    const state = reactive({\n      options: mockOptions,\n      selections: ['a2','b2','c1'],\n    });\n    function random(number: number) {\n      return Math.floor(Math.random() * number);  \n    }\n    function getValue(option) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function onClickRandom() {\n      state.selections = state.options.map(option => {\n        return getValue(option[random(option.length)]);\n      })\n    }\n    return {\n      ...toRefs(state),\n      onClickRandom,\n    };\n  }\n});\n</script>\n\n<style scoped>\n.center-overlay {\n  height: 100%;\n  border-style: solid;\n  border-width: 1px 0px 1px 0px;\n  border-color: blue;\n}\n.top-overlay {\n  height: 100%;\n  background: linear-gradient(\n    to top,\n    rgba(255, 255, 255, 0),\n    rgba(0, 0, 255, 0.2)\n  );\n}\n.bottom-overlay {\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0),\n    rgba(0, 0, 255, 0.2)\n  );\n}\n</style>\n","\nimport { defineComponent, reactive, toRefs } from 'vue';\n\nconst mockOptions = [\n  [\n    {\n      label: \"A1\",\n      value: \"a1\"\n    },\n    {\n      label: \"A2\",\n      value: \"a2\"\n    },\n  ],\n  [\n    {\n      label: \"B1\",\n      value: \"b1\"\n    },\n    {\n      label: \"B2\",\n      value: \"b2\"\n    },\n    {\n      label: \"B3\",\n      value: \"b3\"\n    },\n  ],\n  [\n    {\n      label: \"C1\",\n      value: \"c1\"\n    },\n    {\n      label: \"C2\",\n      value: \"c2\"\n    },\n    {\n      label: \"C3\",\n      value: \"c3\"\n    },\n    {\n      label: \"C4\",\n      value: \"c4\"\n    }\n  ]\n];\n\nexport default defineComponent({\n  name: 'Advance',\n  setup() {\n    const state = reactive({\n      options: mockOptions,\n      selections: ['a2','b2','c1'],\n    });\n    function random(number: number) {\n      return Math.floor(Math.random() * number);  \n    }\n    function getValue(option) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function onClickRandom() {\n      state.selections = state.options.map(option => {\n        return getValue(option[random(option.length)]);\n      })\n    }\n    return {\n      ...toRefs(state),\n      onClickRandom,\n    };\n  }\n});\n","import { render } from \"./Advance.vue?vue&type=template&id=c0470844&scoped=true&bindings={}\"\nimport script from \"./Advance.vue?vue&type=script&lang=ts\"\nexport * from \"./Advance.vue?vue&type=script&lang=ts\"\n\nimport \"./Advance.vue?vue&type=style&index=0&id=c0470844&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-c0470844\"\n\nexport default script","\nimport { defineComponent } from 'vue';\nimport Basic from './examples/Basic.vue'\nimport Advance from './examples/Advance.vue'\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Basic,\n    Advance\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=61d9abfe&bindings={}\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"row justify-center scroll-picker-container\">\n    <div class=\"center-overlay\" :style=\"centerStyle\">\n      <slot name=\"center-overlay\">\n        <div class=\"center-overlay-custom\"/>\n      </slot>\n    </div>\n    <div class=\"pad-top-overlay pad-overlay\" :style=\"padStyle\">\n      <slot name=\"top-overlay\">\n        <div class=\"pad-top-overlay-custom\"/>\n      </slot>\n    </div>\n    <div class=\"pad-bottom-overlay pad-overlay\" :style=\"padStyle\">\n      <slot name=\"bottom-overlay\">\n        <div class=\"pad-bottom-overlay-custom\" />\n      </slot>\n    </div>\n    <div\n      v-for=\"(column, i) in options\"\n      :key=\"`column-${i}`\"\n      class=\"column-container\">\n      <div \n        class=\"column-overlay\"\n        :id=\"`column-${i}`\"\n        :ref=\"el => setColumnRef(el, i, 'overlay')\" />\n      <div\n        :id=\"`column-${i}`\"\n        class=\"column-content\"\n        :ref=\"el => setColumnRef(el, i, 'content')\"\n      >\n        <div class=\"pad\" :style=\"padStyle \" />\n        <div\n          v-for=\"(row, j) in column\"\n          :key=\"`row-${j}`\"\n          :id=\"`row-${j}`\"\n          class=\"row-options\"\n          :style=\"getIsActive(row, i) ? activeStyle : inactiveStyle\"\n          :class=\"getIsActive(row, i) ? activeClass : inactiveClass\"\n        >\n          <slot name=\"option\" :item=\"row\" :active=\"getIsActive(row, i)\">\n            <div class=\"row-option\">\n              {{ getLabel(row) }}\n            </div>\n          </slot>\n        </div>\n        <div class=\"pad pad-bottom\" :style=\"padStyle  \" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  ComputedRef,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  toRefs,\n  UnwrapRef,\n  watch\n} from \"vue\";\nimport { defineComponent } from \"vue\";\n\ntype Selection = string | number | null;\n\ninterface EventElement {\n  name: string;\n  handler: EventListenerOrEventListenerObject;\n}\n\ninterface ColumnPane {\n  overlay?: HTMLElement;\n  content?: HTMLElement;\n}\n\ninterface ScrollPickerState {\n  wheelTimer: number | null;\n  columns: ColumnPane[];\n  markings: number[][];\n  padStyle: ComputedRef<{}>;\n  centerStyle: ComputedRef<{}>;\n  events: ComputedRef<EventElement[]>;\n  isTouchable: boolean;\n  isMouseDown: boolean;\n  isScrolling: boolean;\n  mouseDownStart: {\n    top: number | null;\n    y: number | null;\n  };\n}\n\nexport interface Option {\n  label: string;\n  value: string;\n}\n\nexport default defineComponent({\n  name: \"ScrollPicker\",\n  props: {\n    modelValue: {\n      default: [],\n      type: Array as PropType<Selection[]>\n    },\n    options: {\n      default: [],\n      type: Array as PropType<Option[][]>\n    },\n    activeClass: {\n      default: '',\n      type: String\n    },\n    inactiveClass: {\n      default: '',\n      type: String\n    },\n    activeStyle: {\n      default: '',\n      type: String\n    },\n    inactiveStyle: {\n      default: '',\n      type: String\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    function getContentHeight(columns: ColumnPane[]) {\n      if (columns?.length > 0) {\n        const elements = document.getElementsByClassName(\"row-options\");\n        if (elements?.length > 0) {\n          return elements[0].clientHeight;\n        }\n      }\n      return 0;\n    }\n    function getCenterStyle(columns: ColumnPane[]) {\n      const height = getContentHeight(columns);\n      if (height > 0) {\n        return `height: ${height}px;`;\n      }\n      return \"\";\n    }\n    function getPadStyle(columns: ColumnPane[]) {\n      const height = getContentHeight(columns);\n      if (height > 0) {\n        return `height: calc(50% - ${height / 2}px);`;\n      }\n      return \"\";\n    }\n    function getMarkings(columns: ColumnPane[]) {\n      return columns.map(column => {\n        const rows: number[] = [];\n        let y = 0;\n        if(column.content) {\n          for (let i = 0; i < column.content.children.length; i++) {\n            const row = column.content.children[i];\n            if (row.id.includes(\"row-\")) {\n              rows.push(y);\n              y += row.clientHeight;\n            }\n          } \n        }\n        return rows;\n      });\n    }\n    function getTouchInfo(event: Event): MouseEvent | Touch {\n      const touchEvent = event as TouchEvent\n      return state.isTouchable\n        ? touchEvent.changedTouches[0] || touchEvent.touches[0]\n        : event as MouseEvent;\n    }\n    function preventDefault(event: Event) {\n      if (event.cancelable) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    function getContent(event: Event) {\n      const index = Number((event.target as HTMLElement).id.replace('column-', ''));\n      return state.columns[index].content || null;\n    }\n    function handleStart(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      const touchInfo = getTouchInfo(event as TouchEvent);\n      state.mouseDownStart.y = touchInfo?.clientY || null;\n      state.mouseDownStart.top = content?.scrollTop || null;\n      if (!state.isTouchable) {\n        state.isMouseDown = true;\n        if (overlay) overlay.style.cursor = \"grabbing\";\n      }\n      state.isScrolling = true;\n    }\n    function handleMove(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      if (state.isTouchable || state.isMouseDown) {\n        const touchInfo = getTouchInfo(event);\n        const dy = touchInfo.clientY - (state.mouseDownStart.y || 0);\n        if (content) content.scrollTop = (state.mouseDownStart.top || 0) - dy;\n      }\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleEnd(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      if (!state.isTouchable && state.isMouseDown) {\n        state.isMouseDown = false;\n        state.mouseDownStart.y = null;\n        state.mouseDownStart.top = null;\n        if (overlay) overlay.style.cursor = \"grab\";\n      }\n      state.isScrolling = false;\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleCancel(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      if (!state.isTouchable && state.isMouseDown) {\n        state.isMouseDown = false;\n        state.mouseDownStart.y = null;\n        state.mouseDownStart.top = null;\n        if (overlay) overlay.style.cursor = \"grab\";\n      }\n      state.isScrolling = false;\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleWheel(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      if(content) {\n        content.scrollTop += (event as WheelEvent).deltaY;\n        const { columnIndex, rowIndex } = getColumnRowIndex(content);\n        if(state.wheelTimer) {\n          clearTimeout(state.wheelTimer);\n          state.wheelTimer = null;\n        }\n        state.wheelTimer = setTimeout(() => {\n          setSelections(columnIndex, rowIndex);\n        }, 200)\n      }\n    }\n    function findNearest(arr: number[], value: number) {\n      const nearest = arr.reduce(function(prev, curr) {\n        return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n      });\n      return nearest;\n    }\n    function getColumnRowIndex(column: HTMLElement | null) {\n      if(!column) {\n        return {\n          columnIndex: null,\n          rowIndex: null\n        };\n      }\n      const columnIndex = Number(column.id.replace(\"column-\", \"\"));\n      const markings = state.markings[columnIndex];\n      if (markings?.length > 0) {\n        const nearest = findNearest(markings, column.scrollTop);\n        const rowIndex = markings.findIndex(v => v === nearest);\n        return { columnIndex, rowIndex };\n      }\n      return {\n        columnIndex: null,\n        rowIndex: null\n      };\n    }\n    function initializeSelections(selections: Selection[]) {\n      const newSelections = [...selections].map((selection, columnIndex) => {\n        if(!['string', 'number'].includes(typeof selection)) {\n          return getValue(props.options[columnIndex][0]);\n        }\n        return selection;\n      });\n      nextTick(() => {\n        emit('update:modelValue', newSelections);\n      })\n    }\n    function setSelections(columnIndex: number | null, rowIndex: number | null) {\n      if(typeof columnIndex === 'number' && typeof rowIndex === 'number') {\n        const selection = getValue(props.options[columnIndex][rowIndex]);\n        const newModelValue = [\n          ...props.modelValue\n        ];\n        newModelValue[columnIndex] = selection;\n        initializeSelections(newModelValue);\n      }\n    }\n    function getEvents(isTouchable: boolean): EventElement[] {\n      return [\n        {\n          name: isTouchable ? \"touchstart\" : \"mousedown\",\n          handler: handleStart\n        },\n        {\n          name: isTouchable ? \"touchmove\" : \"mousemove\",\n          handler: handleMove\n        },\n        {\n          name: isTouchable ? \"touchend\" : \"mouseup\",\n          handler: handleEnd\n        },\n        {\n          name: isTouchable ? \"touchcancel\" : \"mouseleave\",\n          handler: handleCancel\n        },\n        {\n          name: \"wheel\",\n          handler: handleWheel\n        }\n      ];\n    }\n    function listenEvent(elements: HTMLElement[]) {\n      elements.forEach(element => {\n        state.events.forEach((event) => {\n          element.removeEventListener(event.name, event.handler, false);\n          element.addEventListener(event.name, event.handler, false);\n        });\n      });\n    }\n    function unlistenEvent(elements: HTMLElement[]) {\n      elements.forEach(element => {\n        state.events.forEach(event => {\n          element.removeEventListener(event.name, event.handler, false);\n        });\n      });\n    }\n    function getLabel(option: Option | string) {\n      return typeof option === \"string\" ? option : option.label;\n    }\n    function getValue(option: Option | string) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function setColumnRef(el: HTMLElement, i: number, type: string) {\n      if(el) {\n        if(!state.columns[i]) {\n          state.columns[i] = {\n            content: undefined,\n            overlay: undefined\n          }\n        }\n        if(type === 'overlay') {\n          state.columns[i].overlay = el;\n        }\n        if(type === 'content') {\n          state.columns[i].content = el;\n        }\n      }\n    }\n    function filterColumnsContent(columns: ColumnPane[]) {\n      return columns.reduce((columns: HTMLElement[], column) => {\n        if(column.overlay) {\n          columns.push(column.overlay)\n        }\n        return columns\n      }, [])\n    }\n    function scrollToModelValue(modelValue: Selection[]) {\n      if (!state.isScrolling) {\n        nextTick(() => {\n          state.markings = getMarkings(state.columns);\n          modelValue.forEach((value, columnIndex) => {\n            if (state.markings[columnIndex] && value !== undefined && value !== null) {\n              const content = state.columns[columnIndex].content;\n              if(content) {\n                const rowIndex = props.options[columnIndex].findIndex(row => getValue(row) === value);\n                const y = state.markings[columnIndex][rowIndex];\n                nextTick(() => {\n                  content.scrollTo({ top: y, behavior: 'smooth' })\n                  // content.animate({ scrollTop: -50})\n                  // content.scrollTop = y;\n                })\n              }\n            }\n          });\n        });\n      }\n    }\n    function getIsActive(option: Option, columnIndex: number) {\n      const value = getValue(option);\n      return props.modelValue[columnIndex] === value\n    }\n    const state: UnwrapRef<ScrollPickerState> = reactive<ScrollPickerState>({\n      wheelTimer: null,\n      columns: [],\n      markings: [],\n      padStyle: computed(() => getPadStyle(state.columns)),\n      centerStyle: computed(() => getCenterStyle(state.columns)),\n      events: computed(() => getEvents(state.isTouchable)),\n      isTouchable: false,\n      isMouseDown: false,\n      isScrolling: false,\n      mouseDownStart: {\n        top: null,\n        y: null\n      }\n    });\n    onMounted(() => {\n      state.isTouchable = matchMedia(\"(hover: none)\").matches;\n      listenEvent(filterColumnsContent(state.columns));\n    });\n    onBeforeUnmount(() => {\n      unlistenEvent(filterColumnsContent(state.columns));\n    });\n    watch(\n      () => props.modelValue,\n      modelValue => {\n        scrollToModelValue(modelValue);\n      }, \n      { immediate: true, deep: true });\n    watch(\n      () => props.options,\n      (options) => {\n        if(!props.modelValue || props.modelValue.length === 0) {\n          initializeSelections([...new Array(options.length)]);\n        }\n      }, \n      { immediate: true, deep: true });\n    return {\n      ...toRefs(state),\n      setColumnRef,\n      getLabel,\n      getIsActive\n    };\n  }\n});\n</script>\n\n<style scoped>\n.row {\n  display: flex;\n  flex-wrap: nowrap;\n}\n.justify-center {\n  justify-content: center;\n}\n.scroll-picker-container {\n  height: 100%;\n  position: relative;\n}\n.column-container {\n  position: relative;\n}\n.column-overlay {\n  z-index: 1;\n  position: absolute;\n  cursor: grab;\n  user-select: none;\n  top: 0px;\n  bottom: 0px;\n  height: 100%;\n  width: 100%;\n}\n.column-content {\n  height: 100%;\n  overflow-y: auto;\n}\n.row-options {\n  font-size: 24px;\n}\n.row-option {\n  padding: 10px;\n}\n.center-overlay {\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n}\n.center-overlay-custom {\n  height: 100%;\n  border-style: solid;\n  border-width: 1px 0px 1px 0px;\n  border-color: lightgray;\n}\n.pad-overlay {\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n}\n.pad-top-overlay {\n  top: 0px;\n}\n.pad-top-overlay-custom {\n  height: 100%;\n  background: linear-gradient(\n    to top,\n    rgba(255, 255, 255, 0),\n    rgba(255, 255, 255, 1)\n  );\n}\n.pad-bottom-overlay {\n  bottom: 0px;\n}\n.pad-bottom-overlay-custom {\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0),\n    rgba(255, 255, 255, 1)\n  );\n}\n::-webkit-scrollbar {\n  width: 0px;\n  height: 5px;\n}\n::-webkit-scrollbar-thumb {\n  background: rgba(0,0,0,0.1); \n  border-radius: 10px;\n}\n</style>\n","\nimport {\n  computed,\n  ComputedRef,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  reactive,\n  toRefs,\n  UnwrapRef,\n  watch\n} from \"vue\";\nimport { defineComponent } from \"vue\";\n\ntype Selection = string | number | null;\n\ninterface EventElement {\n  name: string;\n  handler: EventListenerOrEventListenerObject;\n}\n\ninterface ColumnPane {\n  overlay?: HTMLElement;\n  content?: HTMLElement;\n}\n\ninterface ScrollPickerState {\n  wheelTimer: number | null;\n  columns: ColumnPane[];\n  markings: number[][];\n  padStyle: ComputedRef<{}>;\n  centerStyle: ComputedRef<{}>;\n  events: ComputedRef<EventElement[]>;\n  isTouchable: boolean;\n  isMouseDown: boolean;\n  isScrolling: boolean;\n  mouseDownStart: {\n    top: number | null;\n    y: number | null;\n  };\n}\n\nexport interface Option {\n  label: string;\n  value: string;\n}\n\nexport default defineComponent({\n  name: \"ScrollPicker\",\n  props: {\n    modelValue: {\n      default: [],\n      type: Array as PropType<Selection[]>\n    },\n    options: {\n      default: [],\n      type: Array as PropType<Option[][]>\n    },\n    activeClass: {\n      default: '',\n      type: String\n    },\n    inactiveClass: {\n      default: '',\n      type: String\n    },\n    activeStyle: {\n      default: '',\n      type: String\n    },\n    inactiveStyle: {\n      default: '',\n      type: String\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    function getContentHeight(columns: ColumnPane[]) {\n      if (columns?.length > 0) {\n        const elements = document.getElementsByClassName(\"row-options\");\n        if (elements?.length > 0) {\n          return elements[0].clientHeight;\n        }\n      }\n      return 0;\n    }\n    function getCenterStyle(columns: ColumnPane[]) {\n      const height = getContentHeight(columns);\n      if (height > 0) {\n        return `height: ${height}px;`;\n      }\n      return \"\";\n    }\n    function getPadStyle(columns: ColumnPane[]) {\n      const height = getContentHeight(columns);\n      if (height > 0) {\n        return `height: calc(50% - ${height / 2}px);`;\n      }\n      return \"\";\n    }\n    function getMarkings(columns: ColumnPane[]) {\n      return columns.map(column => {\n        const rows: number[] = [];\n        let y = 0;\n        if(column.content) {\n          for (let i = 0; i < column.content.children.length; i++) {\n            const row = column.content.children[i];\n            if (row.id.includes(\"row-\")) {\n              rows.push(y);\n              y += row.clientHeight;\n            }\n          } \n        }\n        return rows;\n      });\n    }\n    function getTouchInfo(event: Event): MouseEvent | Touch {\n      const touchEvent = event as TouchEvent\n      return state.isTouchable\n        ? touchEvent.changedTouches[0] || touchEvent.touches[0]\n        : event as MouseEvent;\n    }\n    function preventDefault(event: Event) {\n      if (event.cancelable) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    function getContent(event: Event) {\n      const index = Number((event.target as HTMLElement).id.replace('column-', ''));\n      return state.columns[index].content || null;\n    }\n    function handleStart(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      const touchInfo = getTouchInfo(event as TouchEvent);\n      state.mouseDownStart.y = touchInfo?.clientY || null;\n      state.mouseDownStart.top = content?.scrollTop || null;\n      if (!state.isTouchable) {\n        state.isMouseDown = true;\n        if (overlay) overlay.style.cursor = \"grabbing\";\n      }\n      state.isScrolling = true;\n    }\n    function handleMove(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      if (state.isTouchable || state.isMouseDown) {\n        const touchInfo = getTouchInfo(event);\n        const dy = touchInfo.clientY - (state.mouseDownStart.y || 0);\n        if (content) content.scrollTop = (state.mouseDownStart.top || 0) - dy;\n      }\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleEnd(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      if (!state.isTouchable && state.isMouseDown) {\n        state.isMouseDown = false;\n        state.mouseDownStart.y = null;\n        state.mouseDownStart.top = null;\n        if (overlay) overlay.style.cursor = \"grab\";\n      }\n      state.isScrolling = false;\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleCancel(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      const overlay = event.target as HTMLElement;\n      if (!state.isTouchable && state.isMouseDown) {\n        state.isMouseDown = false;\n        state.mouseDownStart.y = null;\n        state.mouseDownStart.top = null;\n        if (overlay) overlay.style.cursor = \"grab\";\n      }\n      state.isScrolling = false;\n      const { columnIndex, rowIndex } = getColumnRowIndex(content);\n      setSelections(columnIndex, rowIndex);\n    }\n    function handleWheel(event: Event) {\n      preventDefault(event);\n      const content = getContent(event);\n      if(content) {\n        content.scrollTop += (event as WheelEvent).deltaY;\n        const { columnIndex, rowIndex } = getColumnRowIndex(content);\n        if(state.wheelTimer) {\n          clearTimeout(state.wheelTimer);\n          state.wheelTimer = null;\n        }\n        state.wheelTimer = setTimeout(() => {\n          setSelections(columnIndex, rowIndex);\n        }, 200)\n      }\n    }\n    function findNearest(arr: number[], value: number) {\n      const nearest = arr.reduce(function(prev, curr) {\n        return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n      });\n      return nearest;\n    }\n    function getColumnRowIndex(column: HTMLElement | null) {\n      if(!column) {\n        return {\n          columnIndex: null,\n          rowIndex: null\n        };\n      }\n      const columnIndex = Number(column.id.replace(\"column-\", \"\"));\n      const markings = state.markings[columnIndex];\n      if (markings?.length > 0) {\n        const nearest = findNearest(markings, column.scrollTop);\n        const rowIndex = markings.findIndex(v => v === nearest);\n        return { columnIndex, rowIndex };\n      }\n      return {\n        columnIndex: null,\n        rowIndex: null\n      };\n    }\n    function initializeSelections(selections: Selection[]) {\n      const newSelections = [...selections].map((selection, columnIndex) => {\n        if(!['string', 'number'].includes(typeof selection)) {\n          return getValue(props.options[columnIndex][0]);\n        }\n        return selection;\n      });\n      nextTick(() => {\n        emit('update:modelValue', newSelections);\n      })\n    }\n    function setSelections(columnIndex: number | null, rowIndex: number | null) {\n      if(typeof columnIndex === 'number' && typeof rowIndex === 'number') {\n        const selection = getValue(props.options[columnIndex][rowIndex]);\n        const newModelValue = [\n          ...props.modelValue\n        ];\n        newModelValue[columnIndex] = selection;\n        initializeSelections(newModelValue);\n      }\n    }\n    function getEvents(isTouchable: boolean): EventElement[] {\n      return [\n        {\n          name: isTouchable ? \"touchstart\" : \"mousedown\",\n          handler: handleStart\n        },\n        {\n          name: isTouchable ? \"touchmove\" : \"mousemove\",\n          handler: handleMove\n        },\n        {\n          name: isTouchable ? \"touchend\" : \"mouseup\",\n          handler: handleEnd\n        },\n        {\n          name: isTouchable ? \"touchcancel\" : \"mouseleave\",\n          handler: handleCancel\n        },\n        {\n          name: \"wheel\",\n          handler: handleWheel\n        }\n      ];\n    }\n    function listenEvent(elements: HTMLElement[]) {\n      elements.forEach(element => {\n        state.events.forEach((event) => {\n          element.removeEventListener(event.name, event.handler, false);\n          element.addEventListener(event.name, event.handler, false);\n        });\n      });\n    }\n    function unlistenEvent(elements: HTMLElement[]) {\n      elements.forEach(element => {\n        state.events.forEach(event => {\n          element.removeEventListener(event.name, event.handler, false);\n        });\n      });\n    }\n    function getLabel(option: Option | string) {\n      return typeof option === \"string\" ? option : option.label;\n    }\n    function getValue(option: Option | string) {\n      return typeof option === \"string\" ? option : option.value;\n    }\n    function setColumnRef(el: HTMLElement, i: number, type: string) {\n      if(el) {\n        if(!state.columns[i]) {\n          state.columns[i] = {\n            content: undefined,\n            overlay: undefined\n          }\n        }\n        if(type === 'overlay') {\n          state.columns[i].overlay = el;\n        }\n        if(type === 'content') {\n          state.columns[i].content = el;\n        }\n      }\n    }\n    function filterColumnsContent(columns: ColumnPane[]) {\n      return columns.reduce((columns: HTMLElement[], column) => {\n        if(column.overlay) {\n          columns.push(column.overlay)\n        }\n        return columns\n      }, [])\n    }\n    function scrollToModelValue(modelValue: Selection[]) {\n      if (!state.isScrolling) {\n        nextTick(() => {\n          state.markings = getMarkings(state.columns);\n          modelValue.forEach((value, columnIndex) => {\n            if (state.markings[columnIndex] && value !== undefined && value !== null) {\n              const content = state.columns[columnIndex].content;\n              if(content) {\n                const rowIndex = props.options[columnIndex].findIndex(row => getValue(row) === value);\n                const y = state.markings[columnIndex][rowIndex];\n                nextTick(() => {\n                  content.scrollTo({ top: y, behavior: 'smooth' })\n                  // content.animate({ scrollTop: -50})\n                  // content.scrollTop = y;\n                })\n              }\n            }\n          });\n        });\n      }\n    }\n    function getIsActive(option: Option, columnIndex: number) {\n      const value = getValue(option);\n      return props.modelValue[columnIndex] === value\n    }\n    const state: UnwrapRef<ScrollPickerState> = reactive<ScrollPickerState>({\n      wheelTimer: null,\n      columns: [],\n      markings: [],\n      padStyle: computed(() => getPadStyle(state.columns)),\n      centerStyle: computed(() => getCenterStyle(state.columns)),\n      events: computed(() => getEvents(state.isTouchable)),\n      isTouchable: false,\n      isMouseDown: false,\n      isScrolling: false,\n      mouseDownStart: {\n        top: null,\n        y: null\n      }\n    });\n    onMounted(() => {\n      state.isTouchable = matchMedia(\"(hover: none)\").matches;\n      listenEvent(filterColumnsContent(state.columns));\n    });\n    onBeforeUnmount(() => {\n      unlistenEvent(filterColumnsContent(state.columns));\n    });\n    watch(\n      () => props.modelValue,\n      modelValue => {\n        scrollToModelValue(modelValue);\n      }, \n      { immediate: true, deep: true });\n    watch(\n      () => props.options,\n      (options) => {\n        if(!props.modelValue || props.modelValue.length === 0) {\n          initializeSelections([...new Array(options.length)]);\n        }\n      }, \n      { immediate: true, deep: true });\n    return {\n      ...toRefs(state),\n      setColumnRef,\n      getLabel,\n      getIsActive\n    };\n  }\n});\n","import { render } from \"./ScrollPicker.vue?vue&type=template&id=85fb9754&scoped=true&bindings={}\"\nimport script from \"./ScrollPicker.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollPicker.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollPicker.vue?vue&type=style&index=0&id=85fb9754&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-85fb9754\"\n\nexport default script","import { App } from 'vue';\nimport ScrollPicker from './ScrollPicker.vue'\n\nexport default {\n  install: (app: App) => {\n    app.component('scroll-picker', ScrollPicker)\n  }\n};\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport ScrollPicker from '../../src/main'\n\nconst app = createApp(App);\napp.use(ScrollPicker);\napp.mount('#app')"],"sourceRoot":""}